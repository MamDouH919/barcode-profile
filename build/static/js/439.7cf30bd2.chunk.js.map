{"version":3,"file":"static/js/439.7cf30bd2.chunk.js","mappings":"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","sources":["Clients/Components/BranchInfo.js","Clients/Components/PoweredBy.js","Clients/Components/SlideShow.js","Clients/Components/BaitWardDialog.js","Clients/Components/Item.js","Clients/typesOfQr/InfoQr.js","Clients/Components/Slider.js","Clients/Components/InfoItem.js","Clients/typesOfQr/MenuQr.js","Clients/Clients.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar, Stack, Typography } from '@mui/material'\r\nimport { FaWhatsapp } from 'react-icons/fa'\r\nimport { LocalPhone, LocationOn } from '@mui/icons-material'\r\n\r\nconst BranchInfo = props => {\r\n    const { branch } = props\r\n    return (\r\n        <Stack spacing={2} alignItems={\"center\"}>\r\n            <Typography variant='h6' textAlign={\"center\"}>فرع {branch.branchName}</Typography>\r\n            <Stack direction={\"row\"} spacing={2} flexWrap={\"wrap\"} useFlexGap justifyContent={\"center\"}>\r\n                {branch.whatsApp && branch.whatsApp.map((element, index) =>\r\n                    <Stack alignItems={\"center\"} key={index}>\r\n                        <a target='_blank' href={`https://wa.me/${element}`} rel=\"noreferrer\">\r\n                            <Avatar sx={{ width: 30, height: 30, background: \"white\" }}>\r\n                                <FaWhatsapp />\r\n                            </Avatar>\r\n                        </a>\r\n                        <Typography color={\"text.primary\"}>\r\n                            WhatsApp {branch.whatsApp.length > 1 ? `- ${index + 1}` : \"\"}\r\n                        </Typography>\r\n                    </Stack>\r\n                )}\r\n                {branch.phone && branch.phone.map((phone, index) =>\r\n                    <Stack alignItems={\"center\"} key={index}>\r\n                        <a target='_blank' href={`tel:${phone}`} rel=\"noreferrer\">\r\n                            <Avatar sx={{ width: 30, height: 30, background: \"white\" }}>\r\n                                <LocalPhone />\r\n                            </Avatar>\r\n                        </a>\r\n                        <Typography color={\"text.primary\"}>\r\n                            Mobile {branch.phone.length > 1 ? `- ${index + 1}` : \"\"}\r\n                        </Typography>\r\n                    </Stack>\r\n                )}\r\n                {branch.location && <Stack alignItems={\"center\"}>\r\n                    <a target='_blank' href={branch.location} rel=\"noreferrer\">\r\n                        <Avatar sx={{ width: 30, height: 30, background: \"white\" }}>\r\n                            <LocationOn />\r\n                        </Avatar>\r\n                    </a>\r\n                    <Typography color={\"text.primary\"}>\r\n                        Location\r\n                    </Typography>\r\n                </Stack>}\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nBranchInfo.propTypes = {\r\n    branch: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BranchInfo\r\n","import { Box, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Link = styled(\"a\")(({ theme }) => ({\r\n    color: \"#000\",\r\n    // textDecoration: \"none\",\r\n    fontWeight:\"bolder\",\r\n    // \"&:hover\": {\r\n    //     textDecoration: \"underline\",\r\n    // }\r\n}));\r\n\r\nconst PoweredBy = () => {\r\n    return (\r\n        <Box textAlign={\"center\"} bgcolor={\"white\"}>\r\n            <Typography variant='h5' color={\"black\"}>Powered By <Link target='_blank' rel=\"noreferrer\" href={`./`}>Mountain</Link></Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PoweredBy","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport menu1 from \"../../imgs/bait-ward/menu1.jpg\"\r\nimport menu2 from \"../../imgs/bait-ward/menu2.jpg\"\r\nimport menu3 from \"../../imgs/bait-ward/menu3.jpg\"\r\nimport menu4 from \"../../imgs/bait-ward/menu4.jpg\"\r\nimport menu5 from \"../../imgs/bait-ward/menu5.jpg\"\r\nimport menu6 from \"../../imgs/bait-ward/menu6.jpg\"\r\nimport menu7 from \"../../imgs/bait-ward/menu7.jpg\"\r\nimport menu8 from \"../../imgs/bait-ward/menu8.jpg\"\r\nimport menu9 from \"../../imgs/bait-ward/menu9.jpg\"\r\nimport menu10 from \"../../imgs/bait-ward/menu10.jpg\"\r\nimport menu11 from \"../../imgs/bait-ward/menu11.jpg\"\r\nimport menu12 from \"../../imgs/bait-ward/menu12.jpg\"\r\nimport menu13 from \"../../imgs/bait-ward/menu13.jpg\"\r\nimport menu14 from \"../../imgs/bait-ward/menu14.jpg\"\r\n\r\nconst AutoPlaySwipeableViews = SwipeableViews\r\n\r\nconst images = [\r\n    {\r\n        label: 'menu page 1',\r\n        imgPath: menu1,\r\n    },\r\n    {\r\n        label: 'menu page 2',\r\n        imgPath: menu2,\r\n    },\r\n    {\r\n        label: 'menu page 3',\r\n        imgPath: menu3,\r\n    },\r\n    {\r\n        label: 'menu page 4',\r\n        imgPath: menu4,\r\n    },\r\n    {\r\n        label: 'menu page 5',\r\n        imgPath: menu5,\r\n    },\r\n    {\r\n        label: 'menu page 6',\r\n        imgPath: menu6,\r\n    },\r\n    {\r\n        label: 'menu page 7',\r\n        imgPath: menu7,\r\n    },\r\n    {\r\n        label: 'menu page 8',\r\n        imgPath: menu8,\r\n    },\r\n    {\r\n        label: 'menu page 9',\r\n        imgPath: menu9,\r\n    },\r\n    {\r\n        label: 'menu page 10',\r\n        imgPath: menu10,\r\n    },\r\n    {\r\n        label: 'menu page 11',\r\n        imgPath: menu11,\r\n    },\r\n    {\r\n        label: 'menu page 12',\r\n        imgPath: menu12,\r\n    },\r\n    {\r\n        label: 'menu page 13',\r\n        imgPath: menu14,\r\n    },\r\n    {\r\n        label: 'menu page 14',\r\n        imgPath: menu13,\r\n    },\r\n\r\n\r\n];\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const maxSteps = images.length;\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: \"100%\", flexGrow: 1 }}>\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n            >\r\n                {images.map((step, index) => (\r\n                    <div key={step.label}>\r\n                        {Math.abs(activeStep - index) <= 2 ? (\r\n                            <Box\r\n                                component=\"img\"\r\n                                sx={{\r\n                                    height: 600,\r\n                                    display: 'block',\r\n                                    maxWidth: \"100%\",\r\n                                    overflow: 'hidden',\r\n                                    width: '100%',\r\n                                }}\r\n                                src={step.imgPath}\r\n                                alt={step.label}\r\n                            />\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleNext}\r\n                        sx={{ color: (theme) => theme.palette.text.primary }}\r\n                        disabled={activeStep === maxSteps - 1}\r\n                    >\r\n                        Next\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowLeft />\r\n                        ) : (\r\n                            <KeyboardArrowRight />\r\n                        )}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button sx={{ color: (theme) => theme.palette.text.primary }} size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowRight />\r\n                        ) : (\r\n                            <KeyboardArrowLeft />\r\n                        )}\r\n                        Back\r\n                    </Button>\r\n                }\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport SwipeableTextMobileStepper from './SlideShow';\r\n\r\nexport default function BaitWardDialog(props) {\r\n    const { open, setOpen } = props\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth={\"sm\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle>Menu</DialogTitle>\r\n                <DialogContent>\r\n                    <SwipeableTextMobileStepper />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button sx={{ color: (theme) => theme.palette.text.primary }} onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport { FaFacebookF, FaInstagram, FaWhatsapp, FaTiktok } from \"react-icons/fa\";\r\nimport { Avatar } from '@mui/material';\r\nimport { IoIosImages } from \"react-icons/io\";\r\n\r\nconst Item = styled(\"div\")(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    maxWidth: 400,\r\n    textDecoration: \"none\",\r\n    display: \"block\",\r\n    margin: \"8px 0\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\"\r\n}));\r\n\r\nconst Icons = {\r\n    facebook: <FaFacebookF />,\r\n    instagram: <FaInstagram />,\r\n    whatsApp: <FaWhatsapp />,\r\n    tikTok: <FaTiktok />,\r\n    menu: <IoIosImages />,\r\n}\r\n\r\nexport default function ItemNoLink(props) {\r\n    const { icon, name, click } = props\r\n    return (\r\n        <Box >\r\n            <Item\r\n                onClick={click}\r\n            >\r\n                <Stack spacing={2} direction=\"row\" alignItems=\"center\">\r\n                    <Stack>\r\n                        <Avatar sx={{ width: 30, height: 30, background: \"white\" }}>\r\n                            {Icons[icon]}\r\n                        </Avatar>\r\n                    </Stack>\r\n                    <Stack sx={{ minWidth: 0 }}>\r\n                        <Typography color={\"text.primary\"} noWrap>{name}</Typography>\r\n                    </Stack>\r\n                </Stack>\r\n            </Item>\r\n        </Box>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { Box, Stack, Typography } from '@mui/material'\r\nimport Grid from '@mui/material/Unstable_Grid2'\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport ZeroWidthStack from '../../Item';\r\nimport ProfileImage from '../Components/ProfileImage';\r\nimport BranchInfo from '../Components/BranchInfo';\r\nimport PoweredBy from '../Components/PoweredBy';\r\nimport BaitWardDialog from '../Components/BaitWardDialog';\r\nimport ItemNoLink from '../Components/Item';\r\n\r\nconst PREFIX = 'InfoQr';\r\n\r\nconst classes = {\r\n    leftWrapper: `${PREFIX}-leftWrapper`,\r\n    content: `${PREFIX}-content`,\r\n    image: `${PREFIX}-image`,\r\n    item: `${PREFIX}-item`,\r\n    contentImg: `${PREFIX}-contentImg`,\r\n    qrCodeData: `${PREFIX}-qrCodeData`,\r\n};\r\n\r\nconst Root = styled(\"div\")((\r\n    {\r\n        theme\r\n    }\r\n) => ({\r\n    display: \"grid\",\r\n    height: \"100%\",\r\n    [`& .${classes.qrCodeData}`]: {\r\n        gridRow: \" 1 / 100\"\r\n    },\r\n    [`& .${classes.leftWrapper}`]: {\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        [`&::before`]: {\r\n            content: \"''\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backdropFilter: \"blur(10px)\",\r\n            background: \"rgba(0,0,0,0.7)\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n        },\r\n    },\r\n    [`& .${classes.content}`]: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"relative\",\r\n        padding: theme.spacing(3, 2)\r\n    },\r\n    [`& .${classes.image}`]: {\r\n        height: \"250px\",\r\n        width: \"250px\",\r\n        borderRadius: \"50%\"\r\n    },\r\n}));\r\n\r\n\r\nconst InfoQr = ({ client, id }) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <Root>\r\n            {open && id === \"bait-ward\" && <BaitWardDialog open={open} setOpen={setOpen} />}\r\n            <Grid container className={classes.qrCodeData}>\r\n                <Grid xs={12} md={6} position={\"relative\"}>\r\n                    <Box className={classes.leftWrapper} sx={{ backgroundImage: `url(${require(`../../imgs/${client.image}`)})`, }}>\r\n                        <div className={classes.content}>\r\n                            <ProfileImage clientColor={client.color} img={require(`../../imgs/${client.image}`)} />\r\n                            <Typography variant='h3' my={2} textAlign={\"center\"} textTransform={\"capitalize\"}>{client.name}</Typography>\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid xs={12} md={6} bgcolor={client.color}>\r\n                    <div className={classes.content}>\r\n                        <Stack mb={2}>\r\n                            <Typography variant='h4'>Social Media</Typography>\r\n                            <Box height={\"3px\"} width={\"50%\"} mt={1} bgcolor={\"#000\"} mx={\"auto\"} />\r\n                        </Stack>\r\n                        <Stack direction={\"row\"} spacing={2} flexWrap={\"wrap\"} justifyContent={\"center\"} useFlexGap>\r\n                            {client.facebook && <ZeroWidthStack\r\n                                link={client.facebook.link}\r\n                                icon={\"facebook\"}\r\n                                name={client.facebook.name}\r\n                            />}\r\n                            {client.instagram && <ZeroWidthStack\r\n                                link={client.instagram.link}\r\n                                icon={\"instagram\"}\r\n                                name={client.instagram.name}\r\n                            />}\r\n                            {client.snapChat && <ZeroWidthStack\r\n                                link={client.snapChat.link}\r\n                                icon={\"snapChat\"}\r\n                                name={client.snapChat.name}\r\n                            />}\r\n                            {client.twitter && <ZeroWidthStack\r\n                                link={client.twitter.link}\r\n                                icon={\"twitter\"}\r\n                                name={client.twitter.name}\r\n                            />}\r\n                            {client.tikTok && <ZeroWidthStack\r\n                                link={client.tikTok.link}\r\n                                icon={\"tikTok\"}\r\n                                name={client.tikTok.name}\r\n                            />}\r\n                            {client.youtube && <ZeroWidthStack\r\n                                link={client.youtube.link}\r\n                                icon={\"youtube\"}\r\n                                name={client.youtube.name}\r\n                            />}\r\n                            {client.fbGroup && client.fbGroup.map((item, index) =>\r\n                                <ZeroWidthStack\r\n                                    key={index}\r\n                                    link={item.link}\r\n                                    icon={\"group\"}\r\n                                    name={item.name}\r\n                                />\r\n                            )}\r\n                            {id === \"bait-ward\" && <ItemNoLink\r\n                                click={() => setOpen(true)}\r\n                                icon={\"menu\"}\r\n                                name={\"مينو بيت ورد\"}\r\n                            />}\r\n                        </Stack>\r\n                        {(client.phone || client.whatsApp) && <Stack mb={1} mt={1}>\r\n                            <Typography variant='h4'>Contact Us</Typography>\r\n                            <Box height={\"3px\"} width={\"50%\"} mt={1} bgcolor={\"#000\"} mx={\"auto\"} />\r\n                        </Stack>}\r\n                        <Stack direction={\"row\"} spacing={2} flexWrap={\"wrap\"} justifyContent={\"center\"} useFlexGap>\r\n                            {client.whatsApp && <ZeroWidthStack\r\n                                link={`https://wa.me/${client.whatsApp.link}`}\r\n                                icon={\"whatsApp\"}\r\n                                name={client.whatsApp.name}\r\n                            />}\r\n                            {client.phone && <ZeroWidthStack\r\n                                link={`tel:${client.phone.link}`}\r\n                                icon={\"phone\"}\r\n                                name={client.phone.name}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack mb={1} mt={1}>\r\n                            <Typography variant='h4'>Our Branches</Typography>\r\n                            <Box height={\"3px\"} width={\"50%\"} mt={1} bgcolor={\"#000\"} mx={\"auto\"} />\r\n                        </Stack>\r\n                        {client.branches.map((branch, i) =>\r\n                            <BranchInfo branch={branch} key={i} />\r\n                        )}\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <PoweredBy />\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default InfoQr\r\n","import React, { useState } from 'react'\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { Box, Button, CircularProgress, MobileStepper, Stack } from '@mui/material'\r\n\r\nconst AutoPlaySwipeableViews = SwipeableViews\r\n\r\n\r\n\r\nconst Slider = ({ images, color }) => {\r\n    // console.log(images);\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const maxSteps = images.length;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleImageLoad = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleImageError = () => {\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Stack flexGrow={1} justifyContent={\"center\"} alignItems={\"center\"} sx={{ maxWidth: \"auto\", minHeight: \"600px\" }}>\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n            >\r\n                {images.map((image, index) => (\r\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        {Math.abs(activeStep - index) <= 2 ? (\r\n                            <>\r\n                                {loading && (\r\n                                    <Box\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                            alignItems: \"center\",\r\n                                            height: \"100%\",\r\n                                            width: 80,\r\n                                            minHeight: \"600px\"\r\n                                        }}\r\n                                    >\r\n                                        <CircularProgress />\r\n                                    </Box>\r\n                                )}\r\n                                <Box\r\n                                    component=\"img\"\r\n                                    sx={{\r\n                                        height: \"100%\",\r\n                                        display: loading ? \"none\" : \"block\",\r\n                                        maxWidth: \"100%\",\r\n                                        overflow: \"hidden\",\r\n                                        width: 400,\r\n                                        opacity: loading ? 0 : 1,\r\n                                        transition: \"opacity 0.5s ease-in-out\", // Add transition for smooth fade-in\r\n                                    }}\r\n                                    src={require(`../../imgs/${image}`)}\r\n                                    alt={\"menu-image\"}\r\n                                    onLoad={handleImageLoad}\r\n                                    onError={handleImageError}\r\n                                />\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n            {images.length > 1 && <MobileStepper\r\n                sx={{\r\n                    \"& div, & button\": {\r\n                        margin: \"0 8px\"\r\n                    },\r\n                    background: \"none\",\r\n                    \"& .MuiMobileStepper-dot\": {\r\n                        background: \"#c0c0c0\"\r\n                    },\r\n                    \"& .MuiMobileStepper-dot.MuiMobileStepper-dotActive\": {\r\n                        background: color\r\n                    }\r\n                }}\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleNext}\r\n                        sx={{\r\n                            color: color, fontSize: '30px',\r\n                            \"&.Mui-disabled\": {\r\n                                color: \"#c0c0c0\"\r\n                            }\r\n                        }}\r\n                        disabled={activeStep === maxSteps - 1}\r\n                    >\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowLeft style={{ fontSize: 50 }} />\r\n                        ) : (\r\n                            <KeyboardArrowRight style={{ fontSize: 50 }} />\r\n                        )}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button\r\n                        sx={{\r\n                            color: color,\r\n                            fontSize: '50px',\r\n                            \"&.Mui-disabled\": {\r\n                                color: \"#c0c0c0\"\r\n                            }\r\n                        }}\r\n                        size=\"small\"\r\n                        onClick={handleBack}\r\n                        disabled={activeStep === 0}\r\n                    >\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowRight style={{ fontSize: 50 }} />\r\n                        ) : (\r\n                            <KeyboardArrowLeft style={{ fontSize: 50 }} />\r\n                        )}\r\n                    </Button>\r\n                }\r\n            />}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Slider\r\n","import { LocalPhone, LocationOn, WhatsApp, Share } from '@mui/icons-material';\r\nimport { Paper, Stack, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Icons = {\r\n    phone: <LocalPhone />,\r\n    location: <LocationOn />,\r\n    whatsApp: <WhatsApp />,\r\n    share: <Share />,\r\n};\r\n\r\nconst InfoItem = ({ color, SecondColor, item, action }) => {\r\n    const data = (\r\n        <Stack direction=\"row\" spacing={2} flexWrap=\"wrap\" justifyContent=\"center\" useFlexGap>\r\n            <Paper sx={{ background: \"#fff\", p: 1, borderRadius: 10 }} elevation={10}>\r\n\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                    <Stack\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        sx={{ background: SecondColor, borderRadius: \"50%\", height: \"40px\", width: \"40px\", color: \"white\" }}\r\n                    >\r\n                        {Icons[item.type]}\r\n                    </Stack>\r\n                    <Typography fontSize={16} color=\"black\" fontWeight=\"bolder\">\r\n                        {item.value}\r\n                    </Typography>\r\n                </Stack>\r\n            </Paper>\r\n        </Stack>\r\n    );\r\n\r\n    return action ? (\r\n        <div>\r\n            {data}\r\n        </div>\r\n    ) : (\r\n        <Link target=\"_blank\" to={item.link} style={{ textDecoration: \"none\" }}>\r\n            {data}\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default InfoItem;\r\n","import React, { useState } from 'react'\r\nimport { Avatar, Box, Button, Container, Dialog, DialogContent, DialogTitle, Paper, Snackbar, Stack, Typography } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport ProfileImage from '../Components/ProfileImage';\r\nimport { FaFacebookF, FaInstagram } from 'react-icons/fa';\r\n\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Slider from '../Components/Slider';\r\nimport InfoItem from '../Components/InfoItem';\r\nimport RestaurantMenuIcon from '@mui/icons-material/RestaurantMenu';\r\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    FacebookMessengerShareButton,\r\n    FacebookShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    XIcon\r\n} from 'react-share';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst PREFIX = 'MenuQr';\r\n\r\nconst classes = {\r\n    leftWrapper: `${PREFIX}-leftWrapper`,\r\n    content: `${PREFIX}-content`,\r\n    image: `${PREFIX}-image`,\r\n    item: `${PREFIX}-item`,\r\n    contentImg: `${PREFIX}-contentImg`,\r\n    qrCodeData: `${PREFIX}-qrCodeData`,\r\n    infoCard: `${PREFIX}-infoCard`,\r\n};\r\n\r\nconst Root = styled(\"div\")((\r\n    {\r\n        theme\r\n    }\r\n) => ({\r\n    display: \"grid\",\r\n    background: \"#fff\",\r\n    [`& .${classes.qrCodeData}`]: {\r\n        gridRow: \" 1 / 100\"\r\n    },\r\n\r\n    [`& .${classes.content}`]: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"relative\",\r\n        padding: theme.spacing(3, 2)\r\n    },\r\n    [`& .${classes.image}`]: {\r\n        height: \"250px\",\r\n        width: \"250px\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    [`& .${classes.infoCard}`]: {\r\n        position: \"relative\",\r\n        my: 2,\r\n        padding: theme.spacing(2),\r\n        borderRadius: \"20px\",\r\n    },\r\n}));\r\n\r\nconst StyledTabs = styled(({ color, subTab, ...props }) => (\r\n    <Tabs\r\n        {...props}\r\n        sx={{\r\n            background: \"transparent\"\r\n        }}\r\n        TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\r\n    />\r\n))(({ theme, color, subTab }) => ({\r\n    '& .MuiTabs-indicator': {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    '& .MuiTabs-indicatorSpan': {\r\n        maxWidth: 40,\r\n        width: '100%',\r\n        backgroundColor: subTab ? color : \"none\",\r\n    },\r\n    '& .MuiTabs-flexContainer': {\r\n        display: \"block\"\r\n    },\r\n}));\r\n\r\nconst StyledTab = styled(({ color, subTab, ...props }) => (\r\n    <Tab disableRipple {...props} />\r\n))(({ theme, color, subTab }) => ({\r\n    textTransform: 'none',\r\n    fontWeight: \"bolder\",\r\n    fontSize: theme.typography.pxToRem(20),\r\n    marginRight: theme.spacing(1),\r\n    color: subTab ? \"#c0bbbb\" : \"#767676d7\",\r\n    border: subTab ? \"none\" : `2px solid #767676d7`,\r\n    borderRadius: \"25px\",\r\n    '&.Mui-selected': {\r\n        color: subTab ? color : \"#fff\",\r\n        border: subTab ? \"none\" : `2px solid ${color}`,\r\n        background: subTab ? \"none\" : color\r\n    },\r\n    '&.Mui-focusVisible': {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ py: 3 }}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nconst Icons = {\r\n    facebook: <FaFacebookF color='white' fontSize={\"larger\"} />,\r\n    instagram: <FaInstagram color='white' fontSize={\"larger\"} />\r\n}\r\n\r\nconst MenuQr = ({ client, id }) => {\r\n    const [value, setValue] = React.useState(0);\r\n    const [infoValue, setInfoValue] = React.useState(0);\r\n    const [menuValue, setMenuValue] = React.useState(0);\r\n\r\n\r\n    // console.log(client);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    const handleChangeInfoValue = (event, newValue) => {\r\n        setInfoValue(newValue);\r\n    };\r\n\r\n    const handleChangeMenuValue = (event, newValue) => {\r\n        setMenuValue(newValue);\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <Root className={classes.leftWrapper}>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnackbar}\r\n                message=\"Url was copied!\"\r\n            />\r\n\r\n            <Stack alignItems={\"center\"} spacing={2} width={\"100%\"}>\r\n                <Box position={\"relative\"}>\r\n                    <Stack spacing={2} className={classes.content}>\r\n                        <ProfileImage size={\"200px\"} clientColor={client.color} img={require(`../../imgs/${client.image}`)} />\r\n                        <Typography my={1} variant='h4' color={\"black\"} fontWeight={\"bolder\"} textAlign={\"center\"} textTransform={\"capitalize\"}>{client.name}</Typography>\r\n                        <Stack direction={\"row\"} mt={2} spacing={2} useFlexGap>\r\n                            {client.social.map((e, i) =>\r\n                                <Link to={e.link} key={i} target='_blank'>\r\n                                    <Avatar sx={{ width: 35, height: 35, background: client.SecondColor }}>\r\n                                        {Icons[e.type]}\r\n                                    </Avatar>\r\n                                </Link>\r\n                            )}\r\n                        </Stack>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">\r\n                                {\"Share it with your friends\"}\r\n                            </DialogTitle>\r\n                            <DialogContent sx={{ background: \"white\", pt: \"16px !important\" }}>\r\n                                <Stack direction={\"row\"} spacing={2} flexWrap={\"wrap\"}>\r\n                                    <FacebookShareButton\r\n                                        url={`qr.mountain-egy.site/${client.key}`}\r\n                                        quote={'Dummy text!'}\r\n                                        hashtag={client.hashtag}\r\n                                    >\r\n                                        <FacebookIcon size={32} round />\r\n                                    </FacebookShareButton>\r\n                                    <FacebookMessengerShareButton\r\n                                        url={`qr.mountain-egy.site/${client.key}`}\r\n                                        quote={'Dummy text!'}\r\n                                        hashtag={client.hashtag}\r\n                                    >\r\n                                        <FacebookMessengerIcon size={32} round />\r\n                                    </FacebookMessengerShareButton>\r\n                                    <WhatsappShareButton\r\n                                        url={`qr.mountain-egy.site/${client.key}`}\r\n                                        quote={'Dummy text!'}\r\n                                        hashtag={client.hashtag}\r\n                                    >\r\n                                        <WhatsappIcon size={32} round />\r\n                                    </WhatsappShareButton>\r\n                                    <TwitterShareButton\r\n                                        url={`qr.mountain-egy.site/${client.key}`}\r\n                                        quote={'Dummy text!'}\r\n                                        hashtag={client.hashtag}\r\n                                    >\r\n                                        <XIcon size={32} round />\r\n                                    </TwitterShareButton>\r\n                                    <TelegramShareButton\r\n                                        url={`qr.mountain-egy.site/${client.key}`}\r\n                                        quote={'Dummy text!'}\r\n                                        hashtag={client.hashtag}\r\n                                    >\r\n                                        <TelegramIcon size={32} round />\r\n                                    </TelegramShareButton>\r\n                                    <CopyToClipboard text={`qr.mountain-egy.site/${client.key}`}>\r\n                                        <Button\r\n                                            onClick={() => {\r\n                                                setSnackbarOpen(true)\r\n                                            }}\r\n                                            sx={{\r\n                                                borderRadius: \"50%\",\r\n                                                minWidth: \"32px\",\r\n                                                width: \"32px\",\r\n                                                height: \"32px\",\r\n                                                p: 0,\r\n                                                '& span': {\r\n                                                    m: 0\r\n                                                }\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            startIcon={<ContentCopyIcon />}\r\n                                        >\r\n\r\n                                        </Button>\r\n                                    </CopyToClipboard>\r\n                                </Stack>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                        <div onClick={handleClickOpen}>\r\n                            <InfoItem color={client.color} SecondColor={client.SecondColor} action item={{\r\n                                type: \"share\",\r\n                                value: \"share it with your friends\"\r\n                            }} />\r\n                        </div>\r\n                    </Stack>\r\n                </Box>\r\n                <Stack alignItems={\"center\"} sx={{ position: \"relative\" }}>\r\n                    <Box sx={{\r\n                        display: \"grid\",\r\n                        position: \"relative\"\r\n                    }} >\r\n                        <StyledTabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            variant=\"scrollable\"\r\n                            scrollButtons\r\n                            aria-label=\"visible arrows tabs example\"\r\n                            color={client.color}\r\n                        >\r\n                            {[\"Menu\", \"Information\"].map((tab, index) =>\r\n                                <StyledTab label={tab} key={index} color={client.color} />\r\n                            )}\r\n                        </StyledTabs>\r\n                    </Box>\r\n                    <div>\r\n                        <TabPanel value={value} index={0}>\r\n                            <Container maxWidth={'lg'} sx={{ p: 0 }}>\r\n                                <Stack alignItems={\"center\"}>\r\n                                    <Box sx={{\r\n                                        display: \"grid\",\r\n                                        position: \"relative\"\r\n                                    }} >\r\n                                        <StyledTabs\r\n                                            subTab\r\n                                            value={menuValue}\r\n                                            onChange={handleChangeMenuValue}\r\n                                            variant=\"scrollable\"\r\n                                            scrollButtons\r\n                                            aria-label=\"visible arrows tabs example\"\r\n                                            color={client.color}\r\n                                        >\r\n                                            {client.menu.map((tab, index) =>\r\n                                                <StyledTab subTab label={\r\n                                                    <Stack direction={\"row\"} spacing={1}>\r\n                                                        <RestaurantMenuIcon fontSize='large' />\r\n                                                        <Typography fontSize={\"20px\"} fontWeight={\"bolder\"}>{tab.title}</Typography>\r\n                                                    </Stack>\r\n                                                } key={index} color={client.color} />\r\n                                            )}\r\n                                        </StyledTabs>\r\n                                    </Box>\r\n                                    <div>\r\n                                        {client.menu.map((menu, index) =>\r\n                                            <TabPanel value={menuValue} key={index} index={index}>\r\n                                                <Container maxWidth={'lg'}>\r\n                                                    <Slider images={menu.images} color={client.color} />\r\n                                                </Container>\r\n                                            </TabPanel>\r\n                                        )}\r\n                                    </div>\r\n                                </Stack>\r\n                            </Container>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1}>\r\n                            <Container maxWidth={'lg'}>\r\n                                <Stack alignItems={\"center\"}>\r\n                                    <Box sx={{\r\n                                        display: \"grid\",\r\n                                        position: \"relative\"\r\n                                    }} >\r\n                                        <StyledTabs\r\n                                            subTab\r\n                                            value={infoValue}\r\n                                            onChange={handleChangeInfoValue}\r\n                                            variant=\"scrollable\"\r\n                                            scrollButtons\r\n                                            aria-label=\"visible arrows tabs example\"\r\n                                            color={client.color}\r\n                                        >\r\n                                            {client.branches.map((tab, index) =>\r\n                                                <StyledTab label={\r\n                                                    <Stack direction={\"row\"} spacing={1}>\r\n                                                        <RestaurantIcon fontSize='large' />\r\n                                                        <Typography fontSize={\"20px\"} fontWeight={\"bolder\"}>{tab.branchName}</Typography>\r\n                                                    </Stack>\r\n                                                } key={index} color={client.color} subTab />\r\n                                            )}\r\n                                        </StyledTabs>\r\n                                    </Box>\r\n                                    <div>\r\n                                        {client.branches.map((branch, index) =>\r\n                                            <TabPanel value={infoValue} key={index} index={index}>\r\n                                                <Container maxWidth={'lg'}>\r\n                                                    <Paper className={classes.infoCard} sx={{ background: \"white\" }} elevation={10} >\r\n                                                        <Stack justifyContent={\"center\"} alignItems={\"center\"} >\r\n                                                            <Stack spacing={2} >\r\n                                                                {branch.branchInfo.map((item, i) => <InfoItem key={i} color={client.color} SecondColor={client.SecondColor} item={item} />)}\r\n                                                            </Stack>\r\n                                                        </Stack>\r\n                                                    </Paper>\r\n                                                    <div style={{ height: \"100px\" }}></div>\r\n\r\n                                                </Container>\r\n                                            </TabPanel>\r\n                                        )}\r\n                                    </div>\r\n                                </Stack>\r\n                            </Container>\r\n                        </TabPanel>\r\n\r\n                    </div>\r\n                </Stack>\r\n            </Stack>\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default MenuQr\r\n","import clients from '../clients.json';\r\nimport { useParams } from 'react-router-dom';\r\nimport NotFound from '../NotFound';\r\nimport InfoQr from './typesOfQr/InfoQr';\r\nimport MenuQr from './typesOfQr/MenuQr';\r\n\r\nfunction Clients() {\r\n    const { id } = useParams()\r\n    const client = clients[id]\r\n\r\n\r\n    if (!client || client.disable) return <NotFound />\r\n\r\n    return client.menuQr ? (<MenuQr client={client} id={id} />) : (\r\n        <InfoQr client={client} id={id} />\r\n    )\r\n}\r\n\r\nexport default Clients"],"names":["props","branch","_jsxs","Stack","spacing","alignItems","children","Typography","variant","textAlign","branchName","direction","flexWrap","useFlexGap","justifyContent","whatsApp","map","element","index","_jsx","target","href","concat","rel","Avatar","sx","width","height","background","FaWhatsapp","color","length","phone","LocalPhone","location","LocationOn","Link","styled","_ref","theme","fontWeight","PoweredBy","Box","bgcolor","AutoPlaySwipeableViews","SwipeableViews","images","label","imgPath","menu1","menu2","menu3","menu4","menu5","menu6","menu7","menu8","menu9","menu10","menu11","menu12","menu14","menu13","useTheme","activeStep","setActiveStep","React","maxSteps","maxWidth","flexGrow","axis","onChangeIndex","step","enableMouseEvents","Math","abs","component","display","overflow","src","alt","MobileStepper","steps","position","nextButton","Button","size","onClick","handleNext","prevActiveStep","palette","text","primary","disabled","KeyboardArrowLeft","KeyboardArrowRight","backButton","handleBack","BaitWardDialog","open","setOpen","handleClose","Dialog","fullWidth","onClose","DialogTitle","DialogContent","SwipeableTextMobileStepper","DialogActions","Item","backgroundColor","mode","typography","body2","padding","secondary","textDecoration","margin","borderRadius","cursor","Icons","facebook","FaFacebookF","instagram","FaInstagram","tikTok","FaTiktok","menu","IoIosImages","ItemNoLink","icon","name","click","minWidth","noWrap","PREFIX","classes","leftWrapper","content","image","item","contentImg","qrCodeData","Root","gridRow","backgroundRepeat","backgroundSize","backdropFilter","top","left","flexDirection","_ref2","client","id","useState","Grid","container","className","xs","md","backgroundImage","require","ProfileImage","clientColor","img","my","textTransform","mb","mt","mx","ZeroWidthStack","link","snapChat","twitter","youtube","fbGroup","branches","i","BranchInfo","loading","setLoading","handleImageLoad","handleImageError","minHeight","style","_Fragment","CircularProgress","opacity","transition","onLoad","onError","fontSize","WhatsApp","share","Share","SecondColor","action","data","Paper","p","elevation","type","value","to","infoCard","StyledTabs","subTab","Tabs","TabIndicatorProps","_ref3","StyledTab","_ref4","Tab","disableRipple","_ref5","pxToRem","marginRight","border","light","TabPanel","other","role","hidden","py","_ref6","setValue","infoValue","setInfoValue","menuValue","setMenuValue","snackbarOpen","setSnackbarOpen","Snackbar","autoHideDuration","handleCloseSnackbar","message","social","e","pt","FacebookShareButton","url","key","quote","hashtag","FacebookIcon","round","FacebookMessengerShareButton","FacebookMessengerIcon","WhatsappShareButton","WhatsappIcon","TwitterShareButton","XIcon","TelegramShareButton","TelegramIcon","CopyToClipboard","m","startIcon","ContentCopyIcon","handleClickOpen","InfoItem","onChange","handleChange","event","newValue","scrollButtons","tab","Container","handleChangeMenuValue","RestaurantMenuIcon","title","Slider","handleChangeInfoValue","RestaurantIcon","branchInfo","useParams","clients","disable","NotFound","menuQr","MenuQr","InfoQr"],"sourceRoot":""}